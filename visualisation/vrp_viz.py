import folium
import numpy as np
import random


def random_color():
    """Generate random color in hex format"""
    r = lambda: random.randint(0,255)
    return '#%02X%02X%02X' % (r(),r(),r())


class VRPPlot():
    """Store and visualise vrp data"""
    
    def __init__(self,
                 coords: list[tuple[float]],
                 trails: list[list[int]]=[]) -> None:
        """Initialize vrp plot instance.

        Args:
            coords (list[tuple[float]]): List of coords in (latitude, longtitude) format.
            trails (list[int], optional): Trails generated by a solver. List of lists of indexes
                corresponding to the coords order. Defaults to [] (no trails).
        """
        self.coords = coords
        self.trails = trails
        
        
    def _plot(self):
        coords_array = np.array(self.coords)
        center = coords_array.mean(axis=0).tolist()
        ne = coords_array.min(axis=0).tolist()
        sw = coords_array.max(axis=0).tolist()
        
        plot = folium.Map(location=center, 
                          tiles="Stamen Terrain")
        
        for loc in self.coords:
            folium.Marker(loc) \
            .add_to(plot)
            
        for trail in self.trails:
            folium.PolyLine([self.coords[index] for index in trail],
                            color = random_color()) \
            .add_to(plot)
        
        plot.fit_bounds((sw, ne))
        return plot
        
    
    def show(self):
        plot = self._plot()
        return plot
    
    
    def save(self, path="vrp_map.html") -> None:
        plot = self._plot()
        plot.save(path)
